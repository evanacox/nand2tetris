/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
        // pick which register gets the true load input
        DMux8Way(in=load, 
                 sel=address, 
                 a=reg0, 
                 b=reg1, 
                 c=reg2, 
                 d=reg3, 
                 e=reg4, 
                 f=reg5, 
                 g=reg6, 
                 h=reg7);

        // registers 0-7
        Register(in=in, load=reg0, out=reg0Out);
        Register(in=in, load=reg1, out=reg1Out);
        Register(in=in, load=reg2, out=reg2Out);
        Register(in=in, load=reg3, out=reg3Out);
        Register(in=in, load=reg4, out=reg4Out);
        Register(in=in, load=reg5, out=reg5Out);
        Register(in=in, load=reg6, out=reg6Out);
        Register(in=in, load=reg7, out=reg7Out);

        // pick which one will be the output
        Mux8Way16(a=reg0Out, 
                  b=reg1Out, 
                  c=reg2Out, 
                  d=reg3Out, 
                  e=reg4Out, 
                  f=reg5Out, 
                  g=reg6Out,
                  h=reg7Out, 
                  sel=address, 
                  out=out);
}